openapi: 3.0.3
info:
  title: Order Management API
  version: 1.0.0

paths:
  /customers:
    get:
      summary: Get all customers
      operationId: getAllCustomers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Create a new customer
      operationId: createCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /customers/{customerId}:
    get:
      summary: Get a single customer by ID
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Not found
    put:
      summary: Update a customer
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Delete a customer
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted

  /orders:
    get:
      summary: Get all orders
      operationId: getAllOrders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{orderId}:
    get:
      summary: Get a single order by ID
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not found
    put:
      summary: Update an order
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Delete an order
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted

components:
  schemas:
    Customer:
      type: object
      required:
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time

    Order:
      type: object
      required:  # ✅ Ensure required fields are enforced
        - customerId
        - orderDate
        - totalAmount
        - status
      properties:
        id:
          type: string
          format: uuid
          readOnly: true  # ✅ ID should be auto-generated
          example: "a3bb189e-8bf9-3888-9912-ace4e6543007"
        customerId:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655441113"
        orderDate:
          type: string
          format: date
          example: "2024-01-01"
        totalAmount:
          type: number
          format: float
          minimum: 0.01
          example: 99.99
        status:
          type: string
          enum: [NEW, IN_PROGRESS, COMPLETED]
          example: "NEW"
        createdAt:
          type: string
          format: date-time
          readOnly: true  # ✅ Auto-generated timestamp
          example: "2025-02-03T16:04:21.922127+01:00"